package com.gzz.createcode.template.vueelement;

import java.util.List;

import com.gzz.createcode.common.Utils;
import com.gzz.createcode.mvc.model.Field;

public class VueList {
	public static StringBuilder create(List<Field> fList, String clsUpp, String cName, String auth, String lowUpp) {
		StringBuilder sb = new StringBuilder();
		String idName = fList.get(0).getName();
		StringBuilder colum = new StringBuilder();
		StringBuilder initform = new StringBuilder();
		StringBuilder expand = new StringBuilder();
		StringBuilder cond = new StringBuilder();
		for (Field fie : fList) {
			String fName = fie.getName();
			String note = fie.getComment();
			cond.append("\r\n      <el-form-item label=\"" + note + "\">");
			cond.append("\r\n        <el-input placeholder=\"请输入" + note + "\" size=\"small\" v-model=\"form." + fName + "\"></el-input>");
			cond.append("\r\n      </el-form-item>");
			initform.append("\r\n          " + fName + ": null,//" + note);
			expand.append("\r\n                  <el-col :span=\"6\">");
			expand.append("\r\n                    <el-form-item label=\"" + note + "\">{{props.row." + fName + "}}</el-form-item>");
			expand.append("\r\n                  </el-col>");
			colum.append("\r\n      <el-table-column prop=\"" + fName + "\" label=\"" + note + "\"></el-table-column>");
		}
		sb.append(Utils.pageNote(cName + "列表", auth));
		sb.append("\r\n<template>");
		sb.append("\r\n  <div><h3>" + cName + "</h3>");
		sb.append("\r\n    <hr/>");
		sb.append("\r\n    <el-form :inline=\"true\">");
		sb.append(cond);
		sb.append("\r\n      <el-form-item>");
		sb.append("\r\n        <el-button icon=\"search\" @click=\"refresh\" title=\"根据输入的条件查询\" size=\"small\">查询</el-button>");
		sb.append("\r\n        <el-button type=\"primary\" icon=\"plus\" @click=\"doAdd()\" title=\"添加\" size=\"small\">添加</el-button>");
		sb.append("\r\n      </el-form-item>");
		sb.append("\r\n    </el-form>");
		sb.append("\r\n    <el-table :data=\"dataList\" v-loading=\"loading\" element-loading-text=\"正在加载......\" style=\"width: 100%\">");
		sb.append("\r\n      <el-table-column type=\"expand\">");
		sb.append("\r\n        <template slot-scope=\"props\">");
		sb.append("\r\n            <el-form>");
		sb.append("\r\n              <el-row :gutter=\"10\">");
		sb.append(expand);
		sb.append("\r\n              </el-row>");
		sb.append("\r\n            </el-form>");
		sb.append("\r\n        </template>");
		sb.append("\r\n      </el-table-column>");
		sb.append(colum);
		sb.append("\r\n      <el-table-column label=\"操作\" width=\"150\">");
		sb.append("\r\n        <template slot-scope=\"props\">");
		sb.append("\r\n          <div>");
		sb.append("\r\n            <el-button type=\"text\" @click=\"doEdit(props.row)\">编辑</el-button>");
		sb.append("\r\n            <el-button type=\"text\" @click=\"doDelete(props.row)\">删除</el-button>");
		sb.append("\r\n          </div>");
		sb.append("\r\n        </template>");
		sb.append("\r\n      </el-table-column>");
		sb.append("\r\n    </el-table>");
		sb.append("\r\n    <br/>");
		sb.append("\r\n    <div style=\"text-align: right\" v-if=\"total > 0\">");
		sb.append("\r\n      <el-pagination small layout=\"sizes,prev, pager, next\" :current-page=\"page\" :total=\"total\" @current-change=\"(curr) => {this.page = curr ; this.refresh();}\"");
		sb.append("\r\n       :page-sizes=\"[10, 15, 20, 100]\" @size-change=\"(s) => {this.size = s ; this.refresh();}\" :page-size=\"size\"></el-pagination>");
		sb.append("\r\n    </div>");
		sb.append("\r\n    <" + clsUpp + "Dialog ref=\"dialog\" :refresh=\"refresh\"></" + clsUpp + "Dialog>");
		sb.append("\r\n  </div>");
		sb.append("\r\n</template>");
		sb.append("\r\n<script>");
		sb.append("\r\n  import " + clsUpp + "Dialog from './" + clsUpp + "Dialog.vue';");
		sb.append("\r\n");
		sb.append("\r\n  export default {");
		sb.append("\r\n    data: function () {");
		sb.append("\r\n      return {");
		sb.append("\r\n        total: 0,");
		sb.append("\r\n        page: 1,");
		sb.append("\r\n        size: 1,");
		sb.append("\r\n        dataList: [],");
		sb.append("\r\n        form: {");
		sb.append(initform);
		sb.append("\r\n        },");
		sb.append("\r\n        loading: false");
		sb.append("\r\n      }");
		sb.append("\r\n    },");
		sb.append("\r\n    computed: {},");
		sb.append("\r\n    created: function () {");
		sb.append("\r\n      this.refresh();");
		sb.append("\r\n    },");
		sb.append("\r\n    methods: {");
		sb.append("\r\n      refresh() {");
		sb.append("\r\n        const that = this;");
		sb.append("\r\n        that.loading = true;");
		sb.append("\r\n        const requestData = {...that.form, page: that.page - 1, size: that.size};");
		sb.append("\r\n        that.$http.post(\"/api/" + lowUpp + "/queryPage\", JSON.stringify(requestData)).then(res => {");
		sb.append("\r\n          that.loading = false;");
		sb.append("\r\n          that.dataList = res.data.content;");
		sb.append("\r\n          that.total = res.data.totalElements;");
		sb.append("\r\n        }).catch(res => {");
		sb.append("\r\n          that.$message.error(\"获取" + cName + "列表失败：\" + res);");
		sb.append("\r\n          that.loading = false;");
		sb.append("\r\n        });");
		sb.append("\r\n      },");
		sb.append("\r\n      doAdd() {");
		sb.append("\r\n        this.$refs[\"dialog\"].addDialog();");
		sb.append("\r\n      },");
		sb.append("\r\n      doEdit(row) {");
		sb.append("\r\n        this.$refs[\"dialog\"].editDialog(row);");
		sb.append("\r\n      },");
		sb.append("\r\n      doDelete(row) {");
		sb.append("\r\n        const that = this;");
		sb.append("\r\n        this.$confirm('你确定要删除吗?', '提示', {");
		sb.append("\r\n          confirmButtonText: '确定',");
		sb.append("\r\n          cancelButtonText: '取消',");
		sb.append("\r\n          type: 'warning'");
		sb.append("\r\n        }).then(() => {");
		sb.append("\r\n          that.$http.delete(\"/api/" + lowUpp + "/delete\", {");
		sb.append("\r\n            params: {ids: [row." + idName + "]}");
		sb.append("\r\n          }).then(res => {");
		sb.append("\r\n            this.$message.success(\"删除成功\");");
		sb.append("\r\n            that.refresh();");
		sb.append("\r\n          }).catch(res => {");
		sb.append("\r\n            that.$message.error(\"删除失败：\" + res);");
		sb.append("\r\n          });");
		sb.append("\r\n        }).catch(() => {");
		sb.append("\r\n        });");
		sb.append("\r\n      }");
		sb.append("\r\n    },");
		sb.append("\r\n    components: { " + clsUpp + "Dialog }");
		sb.append("\r\n  }");
		sb.append("\r\n</script>");
		sb.append("\r\n<style></style>");
		return sb;
	}
}
